{"version":3,"sources":["../../../src/build/flying-shuttle/store-shuttle.ts"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport { execSync } from 'child_process'\nimport { recursiveCopy } from '../../lib/recursive-copy'\nimport { version as nextVersion } from 'next/package.json'\nimport type { NextConfigComplete } from '../../server/config-shared'\nimport {\n  BUILD_MANIFEST,\n  APP_BUILD_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  APP_PATH_ROUTES_MANIFEST,\n  PAGES_MANIFEST,\n  ROUTES_MANIFEST,\n} from '../../shared/lib/constants'\n\nexport interface ShuttleManifest {\n  nextVersion: string\n  config: Record<string, any>\n  gitSha?: string\n}\n\nexport function generateShuttleManifest(config: NextConfigComplete) {\n  let gitSha = ''\n\n  try {\n    gitSha = execSync('git rev-parse HEAD').toString().trim()\n  } catch (_) {}\n\n  return JSON.stringify({\n    gitSha,\n    nextVersion,\n    config: {\n      i18n: config.i18n,\n      basePath: config.basePath,\n      sassOptions: config.sassOptions,\n      trailingSlash: config.trailingSlash,\n\n      experimental: {\n        ppr: config.experimental.ppr,\n        reactCompiler: config.experimental.reactCompiler,\n      },\n    },\n  } satisfies ShuttleManifest)\n}\n\n// we can create a new shuttle with the outputs before env values have\n// been inlined, can be done after stitching takes place\nexport async function storeShuttle({\n  config,\n  distDir,\n  shuttleDir,\n}: {\n  distDir: string\n  shuttleDir: string\n  config: NextConfigComplete\n}) {\n  await fs.promises.rm(shuttleDir, { force: true, recursive: true })\n  await fs.promises.mkdir(shuttleDir, { recursive: true })\n\n  await fs.promises.writeFile(\n    path.join(shuttleDir, 'shuttle-manifest.json'),\n    generateShuttleManifest(config)\n  )\n\n  // copy all server entries\n  await recursiveCopy(\n    path.join(distDir, 'server'),\n    path.join(shuttleDir, 'server'),\n    {\n      filter(item) {\n        return !item.match(/\\.(rsc|meta|html)$/)\n      },\n    }\n  )\n\n  const pagesManifest = JSON.parse(\n    await fs.promises.readFile(\n      path.join(shuttleDir, 'server', PAGES_MANIFEST),\n      'utf8'\n    )\n  )\n  // ensure manifest isn't modified to .html as it's before static gen\n  for (const key of Object.keys(pagesManifest)) {\n    pagesManifest[key] = pagesManifest[key].replace(/\\.html$/, '.js')\n  }\n  await fs.promises.writeFile(\n    path.join(shuttleDir, 'server', PAGES_MANIFEST),\n    JSON.stringify(pagesManifest)\n  )\n\n  // copy static assets\n  await recursiveCopy(\n    path.join(distDir, 'static'),\n    path.join(shuttleDir, 'static')\n  )\n\n  // copy manifests not nested in {distDir}/server/\n  await fs.promises.mkdir(path.join(shuttleDir, 'manifests'), {\n    recursive: true,\n  })\n\n  for (const item of [\n    BUILD_MANIFEST,\n    ROUTES_MANIFEST,\n    APP_BUILD_MANIFEST,\n    REACT_LOADABLE_MANIFEST,\n    APP_PATH_ROUTES_MANIFEST,\n  ]) {\n    const outputPath = path.join(shuttleDir, 'manifests', item)\n    await fs.promises.mkdir(path.dirname(outputPath), { recursive: true })\n    await fs.promises.copyFile(path.join(distDir, item), outputPath)\n  }\n}\n"],"names":["fs","path","execSync","recursiveCopy","version","nextVersion","BUILD_MANIFEST","APP_BUILD_MANIFEST","REACT_LOADABLE_MANIFEST","APP_PATH_ROUTES_MANIFEST","PAGES_MANIFEST","ROUTES_MANIFEST","generateShuttleManifest","config","gitSha","toString","trim","_","JSON","stringify","i18n","basePath","sassOptions","trailingSlash","experimental","ppr","reactCompiler","storeShuttle","distDir","shuttleDir","promises","rm","force","recursive","mkdir","writeFile","join","filter","item","match","pagesManifest","parse","readFile","key","Object","keys","replace","outputPath","dirname","copyFile"],"mappings":"AAAA,OAAOA,QAAQ,KAAI;AACnB,OAAOC,UAAU,OAAM;AACvB,SAASC,QAAQ,QAAQ,gBAAe;AACxC,SAASC,aAAa,QAAQ,2BAA0B;AACxD,SAASC,WAAWC,WAAW,QAAQ,oBAAmB;AAE1D,SACEC,cAAc,EACdC,kBAAkB,EAClBC,uBAAuB,EACvBC,wBAAwB,EACxBC,cAAc,EACdC,eAAe,QACV,6BAA4B;AAQnC,OAAO,SAASC,wBAAwBC,MAA0B;IAChE,IAAIC,SAAS;IAEb,IAAI;QACFA,SAASZ,SAAS,sBAAsBa,QAAQ,GAAGC,IAAI;IACzD,EAAE,OAAOC,GAAG,CAAC;IAEb,OAAOC,KAAKC,SAAS,CAAC;QACpBL;QACAT;QACAQ,QAAQ;YACNO,MAAMP,OAAOO,IAAI;YACjBC,UAAUR,OAAOQ,QAAQ;YACzBC,aAAaT,OAAOS,WAAW;YAC/BC,eAAeV,OAAOU,aAAa;YAEnCC,cAAc;gBACZC,KAAKZ,OAAOW,YAAY,CAACC,GAAG;gBAC5BC,eAAeb,OAAOW,YAAY,CAACE,aAAa;YAClD;QACF;IACF;AACF;AAEA,sEAAsE;AACtE,wDAAwD;AACxD,OAAO,eAAeC,aAAa,EACjCd,MAAM,EACNe,OAAO,EACPC,UAAU,EAKX;IACC,MAAM7B,GAAG8B,QAAQ,CAACC,EAAE,CAACF,YAAY;QAAEG,OAAO;QAAMC,WAAW;IAAK;IAChE,MAAMjC,GAAG8B,QAAQ,CAACI,KAAK,CAACL,YAAY;QAAEI,WAAW;IAAK;IAEtD,MAAMjC,GAAG8B,QAAQ,CAACK,SAAS,CACzBlC,KAAKmC,IAAI,CAACP,YAAY,0BACtBjB,wBAAwBC;IAG1B,0BAA0B;IAC1B,MAAMV,cACJF,KAAKmC,IAAI,CAACR,SAAS,WACnB3B,KAAKmC,IAAI,CAACP,YAAY,WACtB;QACEQ,QAAOC,IAAI;YACT,OAAO,CAACA,KAAKC,KAAK,CAAC;QACrB;IACF;IAGF,MAAMC,gBAAgBtB,KAAKuB,KAAK,CAC9B,MAAMzC,GAAG8B,QAAQ,CAACY,QAAQ,CACxBzC,KAAKmC,IAAI,CAACP,YAAY,UAAUnB,iBAChC;IAGJ,oEAAoE;IACpE,KAAK,MAAMiC,OAAOC,OAAOC,IAAI,CAACL,eAAgB;QAC5CA,aAAa,CAACG,IAAI,GAAGH,aAAa,CAACG,IAAI,CAACG,OAAO,CAAC,WAAW;IAC7D;IACA,MAAM9C,GAAG8B,QAAQ,CAACK,SAAS,CACzBlC,KAAKmC,IAAI,CAACP,YAAY,UAAUnB,iBAChCQ,KAAKC,SAAS,CAACqB;IAGjB,qBAAqB;IACrB,MAAMrC,cACJF,KAAKmC,IAAI,CAACR,SAAS,WACnB3B,KAAKmC,IAAI,CAACP,YAAY;IAGxB,iDAAiD;IACjD,MAAM7B,GAAG8B,QAAQ,CAACI,KAAK,CAACjC,KAAKmC,IAAI,CAACP,YAAY,cAAc;QAC1DI,WAAW;IACb;IAEA,KAAK,MAAMK,QAAQ;QACjBhC;QACAK;QACAJ;QACAC;QACAC;KACD,CAAE;QACD,MAAMsC,aAAa9C,KAAKmC,IAAI,CAACP,YAAY,aAAaS;QACtD,MAAMtC,GAAG8B,QAAQ,CAACI,KAAK,CAACjC,KAAK+C,OAAO,CAACD,aAAa;YAAEd,WAAW;QAAK;QACpE,MAAMjC,GAAG8B,QAAQ,CAACmB,QAAQ,CAAChD,KAAKmC,IAAI,CAACR,SAASU,OAAOS;IACvD;AACF"}