{"version":3,"sources":["../../../../src/server/web/spec-extension/revalidate.ts"],"sourcesContent":["import {\n  abortAndThrowOnSynchronousRequestDataAccess,\n  postponeWithTracking,\n} from '../../app-render/dynamic-rendering'\nimport { isDynamicRoute } from '../../../shared/lib/router/utils'\nimport {\n  NEXT_CACHE_IMPLICIT_TAG_ID,\n  NEXT_CACHE_SOFT_TAG_MAX_LENGTH,\n} from '../../../lib/constants'\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external'\nimport { DynamicServerError } from '../../../client/components/hooks-server-context'\n\n/**\n * This function allows you to purge [cached data](https://nextjs.org/docs/app/building-your-application/caching) on-demand for a specific cache tag.\n *\n * Read more: [Next.js Docs: `revalidateTag`](https://nextjs.org/docs/app/api-reference/functions/revalidateTag)\n */\nexport function revalidateTag(tag: string) {\n  return revalidate(tag, `revalidateTag ${tag}`)\n}\n\n/**\n * This function allows you to purge [cached data](https://nextjs.org/docs/app/building-your-application/caching) on-demand for a specific path.\n *\n * Read more: [Next.js Docs: `revalidatePath`](https://nextjs.org/docs/app/api-reference/functions/revalidatePath)\n */\nexport function revalidatePath(originalPath: string, type?: 'layout' | 'page') {\n  if (originalPath.length > NEXT_CACHE_SOFT_TAG_MAX_LENGTH) {\n    console.warn(\n      `Warning: revalidatePath received \"${originalPath}\" which exceeded max length of ${NEXT_CACHE_SOFT_TAG_MAX_LENGTH}. See more info here https://nextjs.org/docs/app/api-reference/functions/revalidatePath`\n    )\n    return\n  }\n\n  let normalizedPath = `${NEXT_CACHE_IMPLICIT_TAG_ID}${originalPath}`\n\n  if (type) {\n    normalizedPath += `${normalizedPath.endsWith('/') ? '' : '/'}${type}`\n  } else if (isDynamicRoute(originalPath)) {\n    console.warn(\n      `Warning: a dynamic page path \"${originalPath}\" was passed to \"revalidatePath\", but the \"type\" parameter is missing. This has no effect by default, see more info here https://nextjs.org/docs/app/api-reference/functions/revalidatePath`\n    )\n  }\n  return revalidate(normalizedPath, `revalidatePath ${originalPath}`)\n}\n\nfunction revalidate(tag: string, expression: string) {\n  const store = workAsyncStorage.getStore()\n  if (!store || !store.incrementalCache) {\n    throw new Error(\n      `Invariant: static generation store missing in ${expression}`\n    )\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    if (workUnitStore.type === 'cache') {\n      throw new Error(\n        `Route ${store.route} used \"${expression}\" inside a \"use cache\" which is unsupported. To ensure revalidation is performed consistently it must always happen outside of renders and cached functions. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    } else if (workUnitStore.type === 'unstable-cache') {\n      throw new Error(\n        `Route ${store.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\" which is unsupported. To ensure revalidation is performed consistently it must always happen outside of renders and cached functions. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n    if (workUnitStore.phase === 'render') {\n      throw new Error(\n        `Route ${store.route} used \"${expression}\" during render which is unsupported. To ensure revalidation is performed consistently it must always happen outside of renders and cached functions. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    if (workUnitStore.type === 'prerender') {\n      // dynamicIO Prerender\n      const error = new Error(\n        `Route ${store.route} used ${expression} without first calling \\`await connection()\\`.`\n      )\n      abortAndThrowOnSynchronousRequestDataAccess(\n        store.route,\n        expression,\n        error,\n        workUnitStore\n      )\n    } else if (workUnitStore.type === 'prerender-ppr') {\n      // PPR Prerender\n      postponeWithTracking(\n        store.route,\n        expression,\n        workUnitStore.dynamicTracking\n      )\n    } else if (workUnitStore.type === 'prerender-legacy') {\n      // legacy Prerender\n      workUnitStore.revalidate = 0\n\n      const err = new DynamicServerError(\n        `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n      )\n      store.dynamicUsageDescription = expression\n      store.dynamicUsageStack = err.stack\n\n      throw err\n    } else if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n\n  if (!store.revalidatedTags) {\n    store.revalidatedTags = []\n  }\n  if (!store.revalidatedTags.includes(tag)) {\n    store.revalidatedTags.push(tag)\n  }\n\n  // TODO: only revalidate if the path matches\n  store.pathWasRevalidated = true\n}\n"],"names":["abortAndThrowOnSynchronousRequestDataAccess","postponeWithTracking","isDynamicRoute","NEXT_CACHE_IMPLICIT_TAG_ID","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","workAsyncStorage","workUnitAsyncStorage","DynamicServerError","revalidateTag","tag","revalidate","revalidatePath","originalPath","type","length","console","warn","normalizedPath","endsWith","expression","store","getStore","incrementalCache","Error","workUnitStore","route","phase","error","dynamicTracking","err","dynamicUsageDescription","dynamicUsageStack","stack","process","env","NODE_ENV","usedDynamic","revalidatedTags","includes","push","pathWasRevalidated"],"mappings":"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"}