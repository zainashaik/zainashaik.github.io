{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/server/middleware.ts"],"sourcesContent":["import { constants as FS, promises as fs } from 'fs'\nimport path from 'path'\nimport url from 'url'\nimport { SourceMapConsumer } from 'next/dist/compiled/source-map08'\nimport type { StackFrame } from 'next/dist/compiled/stacktrace-parser'\nimport { getSourceMapFromFile } from '../internal/helpers/get-source-map-from-file'\nimport { launchEditor } from '../internal/helpers/launchEditor'\nimport {\n  badRequest,\n  findSourcePackage,\n  getOriginalCodeFrame,\n  internalServerError,\n  json,\n  noContent,\n  type OriginalStackFrameResponse,\n} from './shared'\nimport { NEXT_PROJECT_ROOT } from '../../../../build/next-dir-paths'\nexport { getServerError } from '../internal/helpers/node-stack-frames'\nexport { parseStack } from '../internal/helpers/parse-stack'\nexport { getSourceMapFromFile }\n\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type webpack from 'webpack'\nimport type { RawSourceMap } from 'next/dist/compiled/source-map08'\nimport { formatFrameSourceFile } from '../internal/helpers/webpack-module-path'\n\ntype Source =\n  | {\n      type: 'file'\n      sourceMap: RawSourceMap\n      modulePath: string\n    }\n  | {\n      type: 'bundle'\n      sourceMap: RawSourceMap\n      compilation: webpack.Compilation\n      moduleId: string\n      modulePath: string\n    }\n\nfunction getModuleById(\n  id: string | undefined,\n  compilation: webpack.Compilation\n) {\n  const { chunkGraph, modules } = compilation\n\n  return [...modules].find((module) => chunkGraph.getModuleId(module) === id)\n}\n\nfunction findModuleNotFoundFromError(errorMessage: string | undefined) {\n  return errorMessage?.match(/'([^']+)' module/)?.[1]\n}\n\nfunction getSourcePath(source: string) {\n  return source.replace(/^(webpack:\\/\\/\\/|webpack:\\/\\/|webpack:\\/\\/_N_E\\/)/, '')\n}\n\nasync function findOriginalSourcePositionAndContent(\n  sourceMap: RawSourceMap,\n  position: { line: number; column: number | null }\n) {\n  const consumer = await new SourceMapConsumer(sourceMap)\n  try {\n    const sourcePosition = consumer.originalPositionFor({\n      line: position.line,\n      column: position.column ?? 0,\n    })\n\n    if (!sourcePosition.source) {\n      return null\n    }\n\n    const sourceContent: string | null =\n      consumer.sourceContentFor(\n        sourcePosition.source,\n        /* returnNullOnMissing */ true\n      ) ?? null\n\n    return {\n      sourcePosition,\n      sourceContent,\n    }\n  } finally {\n    consumer.destroy()\n  }\n}\n\nfunction createStackFrame(searchParams: URLSearchParams) {\n  return {\n    file: searchParams.get('file') as string,\n    methodName: searchParams.get('methodName') as string,\n    lineNumber: parseInt(searchParams.get('lineNumber') ?? '0', 10) || 0,\n    column: parseInt(searchParams.get('column') ?? '0', 10) || 0,\n    arguments: searchParams.getAll('arguments').filter(Boolean),\n  } satisfies StackFrame\n}\n\nfunction findOriginalSourcePositionAndContentFromCompilation(\n  moduleId: string | undefined,\n  importedModule: string,\n  compilation: webpack.Compilation\n) {\n  const module = getModuleById(moduleId, compilation)\n  return module?.buildInfo?.importLocByPath?.get(importedModule) ?? null\n}\n\nexport async function createOriginalStackFrame({\n  source,\n  rootDirectory,\n  frame,\n  errorMessage,\n}: {\n  source: Source\n  rootDirectory: string\n  frame: StackFrame\n  errorMessage?: string\n}): Promise<OriginalStackFrameResponse | null> {\n  const { lineNumber, column } = frame\n  const moduleNotFound = findModuleNotFoundFromError(errorMessage)\n  const result = await (async () => {\n    if (moduleNotFound) {\n      if (source.type === 'file') {\n        return undefined\n      }\n\n      return findOriginalSourcePositionAndContentFromCompilation(\n        source.moduleId,\n        moduleNotFound,\n        source.compilation\n      )\n    }\n    // This returns 1-based lines and 0-based columns\n    return await findOriginalSourcePositionAndContent(source.sourceMap, {\n      line: lineNumber ?? 1,\n      column,\n    })\n  })()\n\n  if (!result?.sourcePosition.source) {\n    return null\n  }\n\n  const { sourcePosition, sourceContent } = result\n\n  const filePath = path.resolve(\n    rootDirectory,\n    getSourcePath(\n      // When sourcePosition.source is the loader path the modulePath is generally better.\n      (sourcePosition.source.includes('|')\n        ? source.modulePath\n        : sourcePosition.source) || source.modulePath\n    )\n  )\n\n  const resolvedFilePath = sourceContent\n    ? path.relative(rootDirectory, filePath)\n    : sourcePosition.source\n\n  const traced = {\n    file: resolvedFilePath,\n    lineNumber: sourcePosition.line,\n    column: (sourcePosition.column ?? 0) + 1,\n    methodName:\n      sourcePosition.name ||\n      // default is not a valid identifier in JS so webpack uses a custom variable when it's an unnamed default export\n      // Resolve it back to `default` for the method name if the source position didn't have the method.\n      frame.methodName\n        ?.replace('__WEBPACK_DEFAULT_EXPORT__', 'default')\n        ?.replace('__webpack_exports__.', ''),\n    arguments: [],\n  } satisfies StackFrame\n\n  return {\n    originalStackFrame: traced,\n    originalCodeFrame: getOriginalCodeFrame(traced, sourceContent),\n    sourcePackage: findSourcePackage(traced),\n  }\n}\n\nexport async function getSourceMapFromCompilation(\n  id: string,\n  compilation: webpack.Compilation\n): Promise<RawSourceMap | undefined> {\n  try {\n    const module = getModuleById(id, compilation)\n\n    if (!module) {\n      return undefined\n    }\n\n    // @ts-expect-error The types for `CodeGenerationResults.get` require a\n    // runtime to be passed as second argument, but apparently it also works\n    // without it.\n    const codeGenerationResult = compilation.codeGenerationResults.get(module)\n    const source = codeGenerationResult?.sources.get('javascript')\n\n    return source?.map() ?? undefined\n  } catch (err) {\n    console.error(`Failed to lookup module by ID (\"${id}\"):`, err)\n    return undefined\n  }\n}\n\nexport async function getSource(\n  filename: string,\n  options: {\n    assetPrefix: string\n    distDirectory: string\n    getCompilations: () => webpack.Compilation[]\n  }\n): Promise<Source | undefined> {\n  const { assetPrefix, distDirectory, getCompilations } = options\n\n  // With Webpack, this branch can only be hit when manually changing from\n  // `eval-source-map` to `source-map` for testing purposes.\n  if (filename.startsWith(`${assetPrefix}/_next/static`)) {\n    filename = path.join(\n      distDirectory,\n      filename.replace(new RegExp(`^${assetPrefix}/_next/`), '')\n    )\n  }\n\n  if (path.isAbsolute(filename)) {\n    filename = url.pathToFileURL(filename).href\n  }\n\n  if (filename.startsWith('file:')) {\n    const sourceMap = await getSourceMapFromFile(filename)\n\n    return sourceMap\n      ? {\n          type: 'file',\n          sourceMap,\n          modulePath: filename.replace(/^file:\\/\\//, ''),\n        }\n      : undefined\n  }\n\n  // webpack-internal:///./src/hello.tsx => ./src/hello.tsx\n  // rsc://React/Server/webpack-internal:///(rsc)/./src/hello.tsx?42 => (rsc)/./src/hello.tsx\n  // webpack://_N_E/./src/hello.tsx => ./src/hello.tsx\n  const moduleId = filename\n    .replace(\n      /^(rsc:\\/\\/React\\/[^/]+\\/)?(webpack-internal:\\/\\/\\/|webpack:\\/\\/(_N_E\\/)?)/,\n      ''\n    )\n    .replace(/\\?\\d+$/, '')\n\n  // (rsc)/./src/hello.tsx => ./src/hello.tsx\n  const modulePath = moduleId.replace(/^(\\(.*\\)\\/?)/, '')\n\n  for (const compilation of getCompilations()) {\n    // TODO: `ignoreList`\n    const sourceMap = await getSourceMapFromCompilation(moduleId, compilation)\n\n    if (sourceMap) {\n      return { type: 'bundle', sourceMap, compilation, moduleId, modulePath }\n    }\n  }\n\n  return undefined\n}\n\nexport function getOverlayMiddleware(options: {\n  assetPrefix: string\n  distDirectory: string\n  rootDirectory: string\n  clientStats: () => webpack.Stats | null\n  serverStats: () => webpack.Stats | null\n  edgeServerStats: () => webpack.Stats | null\n}) {\n  const {\n    assetPrefix,\n    distDirectory,\n    rootDirectory,\n    clientStats,\n    serverStats,\n    edgeServerStats,\n  } = options\n\n  return async function (\n    req: IncomingMessage,\n    res: ServerResponse,\n    next: () => void\n  ): Promise<void> {\n    const { pathname, searchParams } = new URL(`http://n${req.url}`)\n\n    if (pathname === '/__nextjs_original-stack-frame') {\n      const isServer = searchParams.get('isServer') === 'true'\n      const isEdgeServer = searchParams.get('isEdgeServer') === 'true'\n      const isAppDirectory = searchParams.get('isAppDirectory') === 'true'\n      const frame = createStackFrame(searchParams)\n\n      let sourcePackage = findSourcePackage(frame)\n\n      if (\n        !(\n          /^(rsc:\\/\\/React\\/[^/]+\\/)?(webpack-internal:\\/\\/\\/|(file|webpack):\\/\\/)/.test(\n            frame.file\n          ) && frame.lineNumber\n        )\n      ) {\n        if (sourcePackage) return json(res, { sourcePackage })\n        return badRequest(res)\n      }\n\n      const formattedFilePath = formatFrameSourceFile(frame.file)\n      const filePath = path.join(rootDirectory, formattedFilePath)\n      const isNextjsSource = filePath.startsWith(NEXT_PROJECT_ROOT)\n\n      let source: Source | undefined\n\n      if (isNextjsSource) {\n        sourcePackage = 'next'\n        return json(res, { sourcePackage })\n      }\n\n      try {\n        source = await getSource(frame.file, {\n          assetPrefix,\n          distDirectory,\n          getCompilations: () => {\n            const compilations: webpack.Compilation[] = []\n\n            // Try Client Compilation first. In `pages` we leverage\n            // `isClientError` to check. In `app` it depends on if it's a server\n            // / client component and when the code throws. E.g. during HTML\n            // rendering it's the server/edge compilation.\n            if ((!isEdgeServer && !isServer) || isAppDirectory) {\n              const compilation = clientStats()?.compilation\n\n              if (compilation) {\n                compilations.push(compilation)\n              }\n            }\n\n            // Try Server Compilation. In `pages` this could be something\n            // imported in getServerSideProps/getStaticProps as the code for\n            // those is tree-shaken. In `app` this finds server components and\n            // code that was imported from a server component. It also covers\n            // when client component code throws during HTML rendering.\n            if (isServer || isAppDirectory) {\n              const compilation = serverStats()?.compilation\n\n              if (compilation) {\n                compilations.push(compilation)\n              }\n            }\n\n            // Try Edge Server Compilation. Both cases are the same as Server\n            // Compilation, main difference is that it covers `runtime: 'edge'`\n            // pages/app routes.\n            if (isEdgeServer || isAppDirectory) {\n              const compilation = edgeServerStats()?.compilation\n\n              if (compilation) {\n                compilations.push(compilation)\n              }\n            }\n\n            return compilations\n          },\n        })\n      } catch (err) {\n        console.error('Failed to get source map:', err)\n        return internalServerError(res)\n      }\n\n      if (!source) {\n        if (sourcePackage) return json(res, { sourcePackage })\n        return noContent(res)\n      }\n\n      try {\n        const originalStackFrameResponse = await createOriginalStackFrame({\n          frame,\n          source,\n          rootDirectory,\n        })\n\n        if (!originalStackFrameResponse) {\n          if (sourcePackage) return json(res, { sourcePackage })\n          return noContent(res)\n        }\n\n        return json(res, originalStackFrameResponse)\n      } catch (err) {\n        console.log('Failed to parse source map:', err)\n        return internalServerError(res)\n      }\n    } else if (pathname === '/__nextjs_launch-editor') {\n      const frame = createStackFrame(searchParams)\n\n      if (!frame.file) return badRequest(res)\n\n      // frame files may start with their webpack layer, like (middleware)/middleware.js\n      const filePath = path.resolve(\n        rootDirectory,\n        frame.file.replace(/^\\([^)]+\\)\\//, '')\n      )\n      const fileExists = await fs.access(filePath, FS.F_OK).then(\n        () => true,\n        () => false\n      )\n      if (!fileExists) return noContent(res)\n\n      try {\n        await launchEditor(filePath, frame.lineNumber, frame.column ?? 1)\n      } catch (err) {\n        console.log('Failed to launch editor:', err)\n        return internalServerError(res)\n      }\n\n      return noContent(res)\n    }\n\n    return next()\n  }\n}\n\nexport function getSourceMapMiddleware(options: {\n  assetPrefix: string\n  distDirectory: string\n  clientStats: () => webpack.Stats | null\n  serverStats: () => webpack.Stats | null\n  edgeServerStats: () => webpack.Stats | null\n}) {\n  const {\n    assetPrefix,\n    distDirectory,\n    clientStats,\n    serverStats,\n    edgeServerStats,\n  } = options\n\n  return async function (\n    req: IncomingMessage,\n    res: ServerResponse,\n    next: () => void\n  ): Promise<void> {\n    const { pathname, searchParams } = new URL(`http://n${req.url}`)\n\n    if (pathname !== '/__nextjs_source-map') {\n      return next()\n    }\n\n    const filename = searchParams.get('filename')\n\n    if (!filename) {\n      return badRequest(res)\n    }\n\n    let source: Source | undefined\n\n    try {\n      source = await getSource(filename, {\n        assetPrefix,\n        distDirectory,\n        getCompilations: () => {\n          const compilations: webpack.Compilation[] = []\n\n          for (const stats of [\n            clientStats(),\n            serverStats(),\n            edgeServerStats(),\n          ]) {\n            if (stats?.compilation) {\n              compilations.push(stats.compilation)\n            }\n          }\n\n          return compilations\n        },\n      })\n    } catch (error) {\n      console.error('Failed to get source map:', error)\n\n      return internalServerError(res)\n    }\n\n    if (!source) {\n      return noContent(res)\n    }\n\n    return json(res, source.sourceMap)\n  }\n}\n"],"names":["constants","FS","promises","fs","path","url","SourceMapConsumer","getSourceMapFromFile","launchEditor","badRequest","findSourcePackage","getOriginalCodeFrame","internalServerError","json","noContent","NEXT_PROJECT_ROOT","getServerError","parseStack","formatFrameSourceFile","getModuleById","id","compilation","chunkGraph","modules","find","module","getModuleId","findModuleNotFoundFromError","errorMessage","match","getSourcePath","source","replace","findOriginalSourcePositionAndContent","sourceMap","position","consumer","sourcePosition","originalPositionFor","line","column","sourceContent","sourceContentFor","destroy","createStackFrame","searchParams","file","get","methodName","lineNumber","parseInt","arguments","getAll","filter","Boolean","findOriginalSourcePositionAndContentFromCompilation","moduleId","importedModule","buildInfo","importLocByPath","createOriginalStackFrame","rootDirectory","frame","moduleNotFound","result","type","undefined","filePath","resolve","includes","modulePath","resolvedFilePath","relative","traced","name","originalStackFrame","originalCodeFrame","sourcePackage","getSourceMapFromCompilation","codeGenerationResult","codeGenerationResults","sources","map","err","console","error","getSource","filename","options","assetPrefix","distDirectory","getCompilations","startsWith","join","RegExp","isAbsolute","pathToFileURL","href","getOverlayMiddleware","clientStats","serverStats","edgeServerStats","req","res","next","pathname","URL","isServer","isEdgeServer","isAppDirectory","test","formattedFilePath","isNextjsSource","compilations","push","originalStackFrameResponse","log","fileExists","access","F_OK","then","getSourceMapMiddleware","stats"],"mappings":"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"}